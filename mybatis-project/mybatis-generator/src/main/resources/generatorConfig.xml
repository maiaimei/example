<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "./mybatis-generator-config_1_0.dtd"> <!-- http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd -->
<generatorConfiguration>
    <!-- 引用外部配置文件，通过 ${xxx} 来引用配置文件的值 -->
    <properties resource="application.properties"/>

    <!--
    targetRuntime: 执行生成的逆向工程的版本
    MyBatis3Simple: 生成基本的CRUD（清新简洁版）
    MyBatis3: 生成带条件的CRUD（奢华尊享版）
    -->
    <context id="DB2Tables" targetRuntime="MyBatis3">

        <property name="javaFileEncoding" value="UTF-8"/>

        <!--生成mapper.xml时覆盖原文件-->
        <plugin type="org.mybatis.generator.plugins.UnmergeableXmlMappersPlugin"/>

        <commentGenerator>
            <!-- 是否去除自动生成的注释 true：是 ： false:否 -->
            <property name="suppressAllComments" value="true"/>
        </commentGenerator>

        <!-- 数据库的连接信息 -->
        <jdbcConnection driverClass="${spring.datasource.mysql.driverClassName}"
                        connectionURL="${spring.datasource.mysql.jdbcUrl}"
                        userId="${spring.datasource.mysql.username}"
                        password="${spring.datasource.mysql.password}">
            <!-- MyBatis Generator 代码生成器生成表字段不正确或选择错数据库，添加连接数据库参数 nullCatalogMeansCurrent=true -->
            <property name="nullCatalogMeansCurrent" value="true"/>
            <!-- MyBatis Generator 逆向生成没有根据主键的select,update和delete，添加useInformationSchema=true，且数据表需要设置主键 -->
            <property name="useInformationSchema" value="true"/>
            <property name="delimitIdentifiers" value="true"/>
        </jdbcConnection>

        <javaTypeResolver>
            <!-- 默认false，把JDBC DECIMAL和NUMERIC类型解析为Integer，为 true时把JDBC DECIMAL和NUMERIC类型解析为java.math.BigDecimal -->
            <property name="forceBigDecimals" value="false"/>
        </javaTypeResolver>

        <!-- javaBean的生成策略 -->
        <javaModelGenerator targetPackage="${javaModel.targetPackage}" targetProject="${javaModel.targetProject}">
            <property name="enableSubPackages" value="true"/>
            <property name="trimStrings" value="true"/>
        </javaModelGenerator>

        <!-- SQL映射文件的生成策略 -->
        <sqlMapGenerator targetPackage="${sqlMap.targetPackage}" targetProject="${sqlMap.targetProject}">
            <property name="enableSubPackages" value="true"/>
        </sqlMapGenerator>

        <!-- Mapper接口的生成策略 -->
        <javaClientGenerator targetPackage="${javaClient.targetPackage}" targetProject="${javaClient.targetProject}"
                             type="XMLMAPPER">
            <property name="enableSubPackages" value="true"/>
        </javaClientGenerator>

        <!-- 逆向分析的表，可以通过 cn.maiaimei.example.Application.main 批量生成 <table tableName="xxx" domainObjectName="Xxx"/> -->
        <table tableName="sys_user" domainObjectName="User"/>

    </context>
</generatorConfiguration>
